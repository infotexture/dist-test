<?xml version="1.0" encoding="utf-8"?>
<!--Arbortext, Inc., 1988-2004, v.4002-->
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA Reference//EN"
 "../../dtd/reference.dtd">
<!--             (C) Copyright OASIS Open 2005.                    -->
<!--             (C) Copyright IBM Corporation 2001, 2004.         -->
<!--             All Rights Reserved.                              -->
<reference id="reltable" xml:lang="en-us">
<title><keyword>reltable</keyword></title>
<shortdesc>The relationship table (&lt;<keyword>reltable</keyword>>) defines
relationships between topics, based on the familiar table model of rows (&lt;<keyword>relrow</keyword>>),
columns (&lt;<keyword>relheader</keyword>>), and cells (&lt;<keyword>relcell</keyword>>).
The &lt;<keyword>relcell</keyword>> elements can contain &lt;<keyword>topicref</keyword>>
elements, which are then related to other &lt;<keyword>topicref</keyword>>
elements in the same row (although not necessarily in the same cell). By default,
the contents of a &lt;<keyword>reltable</keyword>> element are not output
for navigation or TOC purposes, and are used only to define relationships
that can be expressed as topic-to-topic links.</shortdesc>
<prolog><metadata>
<keywords><indexterm>reltable</indexterm><indexterm>Map elements<indexterm>reltable</indexterm>  </indexterm>
<indexterm>reltable</indexterm></keywords>
</metadata></prolog>
<refbody>
<section>Relationship tables can be used in conjunction with hierarchies and
groups to manage all the related links in an information set.<?Pub Caret?></section>
<section conref="MapNav.dita#commonCMdefs/reltable-contains"></section>
<section conref="MapNav.dita#commonCMdefs/reltable-containedby"></section>
<section conref="MapNav.dita#commonCMdefs/reltable-classvalue"></section>
<section><title>Attributes</title><simpletable id="reltable_attr" relcolwidth="2* 3* 1* 1* 1*">
<sthead>
<stentry>Name</stentry>
<stentry>Description</stentry>
<stentry>Data Type</stentry>
<stentry>Default Value</stentry>
<stentry>Required?</stentry>
</sthead>
<strow conref="commonLRdefs.dita#commonLRdefs/title">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="commonLRdefs.dita#commonLRdefs/topicref-atts-no-toc">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="commonLRdefs.dita#commonLRdefs/select-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="commonLRdefs.dita#commonLRdefs/global-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="commonLRdefs.dita#commonLRdefs/classonly">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
</simpletable></section>
<example><title>Example</title>In this example, a relationship table is defined
with three columns; one for "concept", one for "task", and one for "reference".
Three cells are defined within one row. The first cell contains one concept
topic: batsonar.xml. The second cell contains two task topics: batcaring.xml
and batfeeding.xml. The third cell contains two reference topics: batguano.xml
and bathistory.xml. <codeblock>&lt;map>
 &lt;reltable>
  &lt;relheader>
   &lt;relcolspec type="concept">
   &lt;relcolspec type="task">
   &lt;relcolspec type="reference">
  &lt;/relheader>
  &lt;relrow>
   &lt;relcell>&lt;topicref href="batsonar.dita"/>&lt;/relcell>
   &lt;relcell>&lt;topicref href="batcaring.dita"/>&lt;topicref
   href="batfeeding.dita"/>&lt;/relcell>
   &lt;relcell>&lt;topicref href="batguano.dita"/>&lt;topicref
   href="bathistory.dita"/>&lt;/relcell>
  &lt;/relrow>
 &lt;/reltable>
&lt;/map></codeblock>       A table view of the tagging would look like this:<simpletable>
<sthead>
<stentry>type="concept"</stentry>
<stentry>type="task"</stentry>
<stentry>type="reference"</stentry>
</sthead>
<strow>
<stentry>batsonar.dita</stentry>
<stentry>batcaring.dita, batfeeding.dita</stentry>
<stentry>batguano.dita, bathistory.dita</stentry>
</strow>
</simpletable><p>On output, links should be added to topics that are in the
same row, but not in the same cell. This allows simple maintenance of parallel
relationships: for example, in this case, batcaring.dita and batfeeding.dita
are two tasks that require the same supporting information (concept and reference
topics) but might otherwise be unrelated. When topics in the same cell are
in fact related, the cell's collection-type attribute can be set to family.
If some cells or columns are intended solely as supporting information and
should not link back to topics in other cells, you can set the linking attribute
on the cell or column to targetonly.</p><p>In this example, the related links
would be as follows:<dl><dlentry>
<dt>batsonar.dita</dt>
<dd>batcaring.dita, batfeeding.dita, batguano.dita, bathistory.dita</dd>
</dlentry><dlentry>
<dt>batcaring.dita</dt>
<dd>batsonar.dita, batguano.dita, bathistory.dita</dd>
</dlentry><dlentry>
<dt>batfeeding.dita</dt>
<dd>batsonar.dita, batguano.dita, bathistory.dita</dd>
</dlentry><dlentry>
<dt>batguano.dita</dt>
<dd>batsonar.dita, batcaring.dita, batfeeding.dita</dd>
</dlentry><dlentry>
<dt> bathistory.dita</dt>
<dd>batsonar.dita, batcaring.dita, batfeeding.dita</dd>
</dlentry></dl>Although the table may initially take some time to learn and
manipulate, it is inherently a more efficient form to manage these links.
It is also easier to see and manage patterns using the table; for example,
the fact that batfeeding.dita and batcaring.dita have the same relationships
to supporting information is clear from the table, but would require some
comparison and counting to determine from just the definition list summary.</p></example>
</refbody>
</reference>
<?Pub *0000005915?>
