<project name="dita-targets"  basedir=".">
<!-- (c) Copyright IBM Corp. 2004, 2005 All Rights Reserved. -->
<!-- parameters 
  dita.input.dirname  required
	dita.input          required
	dita.temp.dir       required
	dita.script.dir     required
  dita.extname        required
  output.dir          required
-->
  
<target name="dita.init">
  <!-- environment -->  
</target>

<!-- Build DocBook output from ditamap -->
<target name="dita.map.docbook">  
  <mkdir dir="${outputDir}" />
  <xslt processor="trax"
        in="${inputDir}${file.separator}${inputMap}"
        out="${outputDir}${file.separator}${mapRoot}.xml"
        style="${dita.script.dir}${file.separator}map2docbook.xsl">
    <param name="outputdir" expression="${outputDir}" />
    <xmlcatalog refid="dita.catalog" />
  </xslt>
</target>

<!-- Build DocBook output from dita topic -->
<target name="dita.topic.docbook">
  <condition property="args.xsl" value="${dita.script.dir}${file.separator}dita2docbook.xsl">
    <not>
      <isset property="args.xsl"/>
    </not>
  </condition>
  <xslt processor="trax"
        in="${inputFile}"
        out="${outputFile}"
        style="${args.xsl}">
    <xmlcatalog refid="dita.catalog" />
  </xslt>
</target>

<!-- Build XSL-FO output from ditamap -->
<target name="dita.map.fo">
  <condition property="args.xsl" value="${dita.script.dir}${file.separator}dita2fo-shell.xsl">
    <not>
      <isset property="args.xsl"/>
    </not>
  </condition>
  <xslt processor="trax"
	    in="${input}"
	    out="${dita.temp.dir}${file.separator}${dita.map.filename.root}_MERGED.xml"
        style="${dita.script.dir}${file.separator}topicmerge.xsl">
    <param name="root-path" expression="${rootPath}${file.separator}" />
    <xmlcatalog refid="dita.catalog" />
  </xslt>
  <xslt processor="trax"
	    in="${dita.temp.dir}${file.separator}${dita.map.filename.root}_MERGED.xml"
		out="${output}"
        style="${args.xsl}">
    <xmlcatalog refid="dita.catalog" />
    <param name="output-related-links" expression="" />
    <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
    <param name="DRAFT" expression="${args.draft}" if="args.draft"/>
    <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"/>
    <param name="dflt-ext" expression="${args.fo.img.ext}" if="args.fo.img.ext"/>
  </xslt>
</target>

<!-- Build PDF from FO using FOP, need to include FOP, Avalon, 
	 and Batik relevant jar files in CLASSPATH -->
<target name="dita.fo2pdf" if="hasFOP">
  <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop"/>
  <fop format="application/pdf"
	   basedir="${input}"
       fofile="${input}"
       outfile="${output}"
       messagelevel="info">
  </fop>
</target>

<!-- Build XSL-FO output from dita topic -->
<target name="dita.topic.fo">
  <condition property="args.xsl" value="${dita.script.dir}${file.separator}dita2fo-shell.xsl">
    <not>
      <isset property="args.xsl"/>
    </not>
  </condition>
  <xslt processor="trax"
        in="${input}"
        out="${output}"
        style="${args.xsl}">
    <xmlcatalog refid="dita.catalog" />
    <param name="output-related-links" expression=""/>
    <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
    <param name="DRAFT" expression="${args.draft}" if="args.draft"/>
    <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"/>	
    <param name="dflt-ext" expression="${args.fo.img.ext}" if="args.fo.img.ext"/>
  </xslt>
</target>

<!-- xhtml output -->
<target name="dita.topics.xhtml">
  <condition property="args.outext" value=".html">
    <not>
      <isset property="args.outext"/>
    </not>
  </condition>
  <condition property="args.xsl" value="${dita.script.dir}${file.separator}dita2xhtml.xsl">
    <not>
      <isset property="args.xsl"/>
    </not>
  </condition>
  <xslt processor="trax"
		basedir="${dita.temp.dir}"
		destdir="${output.dir}"
		includes="${fullditatopiclist}"
		extension="${args.outext}"
		style="${args.xsl}">
        <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
        <param name="FILTERFILE" expression="${dita.input.valfile}" if="dita.input.valfile"/>
        <param name="CSS" expression="${args.css}" if="args.css"/>
        <param name="CSSPATH" expression="${args.csspath}" if="args.csspath"/>
        <param name="HDF" expression="${args.hdf}" if="args.hdf"/>
        <param name="HDR" expression="${args.hdr}" if="args.hdr"/>
        <param name="FTR" expression="${args.ftr}" if="args.ftr"/>
        <param name="DRAFT" expression="${args.draft}" if="args.draft"/>
        <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"/>
        <param name="INDEXSHOW" expression="${args.indexshow}" if="args.indexshow"/>
        <param name="OUTEXT" expression="${args.outext}" if="args.outext"/>
        <param name="PATH2PROJ" expression="${dita.map.output.dir}${file.separator}" if="dita.input.valfile"/>
    </xslt>
  <antcall target="copy-css"/>
</target>

<target name="dita.map.xhtml">
  <condition property="args.outext" value=".html">
    <not>
      <isset property="args.outext"/>
    </not>
  </condition>
  <condition property="args.xhtml.toc" value="index">
    <not>
      <isset property="args.xhtml.toc"/>
    </not>
  </condition>
  <xslt processor="trax"
		basedir="${dita.temp.dir}"
		destdir="${output.dir}"
		includes="${dita.input}"
		style="${dita.script.dir}${file.separator}map2htmtoc.xsl">
        <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
        <param name="OUTEXT" expression="${args.outext}" if="args.outext"/>
        <mapper type="glob" from="*${dita.input.filename}" to="*${args.xhtml.toc}${args.outext}"/>
    </xslt>
</target>
<!-- end xhtml process -->

<!-- eclipse output -->
<target name="dita.map.eclipse">
  <basename property="dita.map.toc.root" file="${dita.input.filename}" suffix=".ditamap"/>
  <condition property="args.eclipsehelp.toc" value="${dita.map.toc.root}">
    <not>
      <isset property="args.eclipsehelp.toc"/>
    </not>
  </condition>
  <condition property="args.outext" value=".html">
    <not>
      <isset property="args.outext"/>
    </not>
  </condition>
  <xslt processor="trax"
    basedir="${dita.temp.dir}"
		destdir="${output.dir}"
		includes="${dita.input}"
		style="${dita.script.dir}${file.separator}map2eclipse.xsl">
        <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
        <param name="OUTEXT" expression="${args.outext}" if="args.outext"/>
        <mapper type="glob" from="*${dita.input.filename}" to="*${args.eclipsehelp.toc}.xml"/>
    </xslt>
    <xslt processor="trax"
      in="${dita.temp.dir}${file.separator}${dita.input}"
      out="${dita.map.output.dir}${file.separator}plugin.xml"
      style="${dita.script.dir}${file.separator}map2plugin.xsl">
        <param name="TOCROOT" expression="${args.eclipsehelp.toc}"/>
    </xslt>
</target>

<target name="dita.topics.eclipse">
  <antcall target="dita.topics.xhtml"/>
</target>
<!-- end eclipse process -->

<!-- eclipse content provider -->
<target name="dita.map.eclipse.content">
  <basename property="dita.map.toc.root" file="${dita.input.filename}" suffix=".ditamap"/>
  <condition property="args.eclipsecontent.toc" value="${dita.map.toc.root}">
    <not>
      <isset property="args.eclipsecontent.toc"/>
    </not>
  </condition>
  <condition property="content.link.ext" value=".html?srcext=dita">
	<equals arg1="${dita.extname}" arg2=".dita"></equals>
  </condition>
  <condition property="content.link.ext" value=".html?srcext=xml">
	<equals arg1="${dita.extname}" arg2=".xml"></equals>
  </condition>
  <xslt processor="trax"
    basedir="${dita.temp.dir}"
		destdir="${output.dir}"
		includes="${dita.input}"
		style="${dita.script.dir}${file.separator}map2eclipse.xsl">
        <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
        <param name="OUTEXT" expression="${content.link.ext}"/>
        <mapper type="glob" from="*${dita.input.filename}" to="*${args.eclipsecontent.toc}.xml"/>
    </xslt>
    <xslt processor="trax"
      in="${dita.temp.dir}${file.separator}${dita.input}"
      out="${dita.map.output.dir}${file.separator}plugin.xml"
      style="${dita.script.dir}${file.separator}map2plugin-cp.xsl">
        <param name="TOCROOT" expression="${args.eclipsecontent.toc}"/>
    </xslt>
</target>

<target name="dita.topics.eclipse.content">
  <copy todir="${output.dir}">
    <fileset dir="${dita.temp.dir}" includes="${fullditatopiclist}">      
    </fileset>
  </copy>
</target>
<!-- end eclipse content provider process -->

<!-- java help output -->
<target name="dita.map.javahelp">
  <basename property="dita.map.toc.root" file="${dita.input.filename}" suffix=".ditamap"/>
  <condition property="args.javahelp.toc" value="${dita.map.toc.root}">
    <not>
      <isset property="args.javahelp.toc"/>
    </not>
  </condition>
  <condition property="args.javahelp.map" value="${dita.map.toc.root}">
    <not>
      <isset property="args.javahelp.map"/>
    </not>
  </condition>
  <condition property="args.outext" value=".html">
    <not>
      <isset property="args.outext"/>
    </not>
  </condition>
  <xslt processor="trax"
    basedir="${dita.temp.dir}"
		destdir="${output.dir}"
		includes="${dita.input}"
		style="${dita.script.dir}${file.separator}map2javahelptoc.xsl">
        <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
        <param name="OUTEXT" expression="${args.outext}" if="args.outext"/>
        <mapper type="glob" from="*${dita.input.filename}" to="*${args.javahelp.toc}.xml"/>
    </xslt>
  <xslt processor="trax"
    basedir="${dita.temp.dir}"
		destdir="${output.dir}"
		includes="${dita.input}"
		style="${dita.script.dir}${file.separator}map2javahelpmap.xsl">
        <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
        <param name="OUTEXT" expression="${args.outext}" if="args.outext"/>      
        <mapper type="glob" from="*${dita.input.filename}" to="*${args.javahelp.map}.jhm"/>
    </xslt>
	
	<!-- Generate Java Help Set File -->
	<xslt processor="trax"
	      basedir="${dita.temp.dir}"
	      destdir="${output.dir}"
	      includes="${dita.input}"
	      style="${dita.script.dir}${file.separator}map2javahelpset.xsl">
	        <param name="javahelpmap" expression="${args.javahelp.map}"/>
            <param name="javahelptoc" expression="${args.javahelp.toc}"/>
            <mapper type="glob" from="*${dita.input.filename}" to="*${dita.map.toc.root}_helpset.hs"/>
    </xslt>
    
	<!-- Generate Java Help Index File -->
    <pipeline message="Extract index term."
                module="IndexTermExtract"    
				inputmap="${dita.input}"        
                extparam="input=${dita.temp.dir}${file.separator}dita.list;output=${output.dir}${file.separator}${dita.input};targetext=.html;indextype=javahelp"
    />
</target>

<target name="dita.topics.javahelp">
  <condition property="args.outext" value=".html">
    <not>
      <isset property="args.outext"/>
    </not>
  </condition>
  <condition property="args.xsl" value="${dita.script.dir}${file.separator}dita2html.xsl">
    <not>
      <isset property="args.xsl"/>
    </not>
  </condition>
  <xslt processor="trax"
		basedir="${dita.temp.dir}"
		destdir="${output.dir}"
		includes="${fullditatopiclist}"
		extension="${args.outext}"
		style="${args.xsl}">
        <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
        <param name="FILTERFILE" expression="${dita.input.valfile}" if="dita.input.valfile"/>
        <param name="CSS" expression="${args.css}" if="args.css"/>
        <param name="CSSPATH" expression="${args.csspath}" if="args.csspath"/>
        <param name="HDF" expression="${args.hdf}" if="args.hdf"/>
        <param name="HDR" expression="${args.hdr}" if="args.hdr"/>
        <param name="FTR" expression="${args.ftr}" if="args.ftr"/>
        <param name="DRAFT" expression="${args.draft}" if="args.draft"/>
        <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"/>
        <param name="OUTEXT" expression="${args.outext}" if="args.outext"/>
        <param name="INDEXSHOW" expression="${args.indexshow}" if="args.indexshow"/>
        <param name="PATH2PROJ" expression="${dita.map.output.dir}${file.separator}" if="dita.input.valfile"/>
    </xslt>
    <antcall target="copy-css"/>
</target>

<target name="compile.Java.Help" if="env.JHHOME">
  <java jar="${env.JHHOME}${file.separator}javahelp${file.separator}bin${file.separator}jhindexer.jar"
        fork="true"
        dir="${outputDir}">
    <arg value="."/>
  </java>
</target>
<!-- end java help process -->

<!-- html help output -->
<target name="dita.map.htmlhelp">
  <condition property="args.outext" value=".html">
    <not>
      <isset property="args.outext"/>
    </not>
  </condition>
  <xslt processor="trax"
		basedir="${dita.temp.dir}"
		destdir="${output.dir}"
		includes="${dita.input}"
		extension=".hhc"
		style="${dita.script.dir}${file.separator}map2hhc.xsl">
        <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
        <param name="OUTEXT" expression="${args.outext}" if="args.outext"/>
  </xslt>  
  <pipeline message="Extract index term."
            module="IndexTermExtract"   
			inputmap="${dita.input}"         
            extparam="input=${dita.temp.dir}${file.separator}dita.list;output=${output.dir}${file.separator}${dita.input};targetext=${args.outext};indextype=htmlhelp"/>
  <xslt processor="trax"
		basedir="${dita.temp.dir}"
		destdir="${output.dir}"
		includes="${dita.input}"
		extension=".hhp"
		style="${dita.script.dir}${file.separator}map2hhp.xsl">
        <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
        <param name="OUTEXT" expression="${args.outext}" if="args.outext"/>
        <param name="HHCNAME" expression="${dita.map.filename.root}.hhc"/>
    </xslt>  
</target>

<target name="compile.HTML.Help" if="HTMLHelpCompiler">
		<exec executable="${HTMLHelpCompiler}"
				failonerror="${failonerror}"
				failifexecutionfails="${failonerror}">
			<arg value="${projectFile}"/>
		</exec>
</target>

<target name="dita.topics.htmlhelp">
  <antcall target="dita.topics.javahelp"/>
</target>
<!-- end html help process -->

<!-- generalize a specialized topic to the base elements -->
<target name="dita.topic.generalize">
	<xslt processor="trax"
			in="${inputFile}"
			out="${outputFile}"
			style="${dita.script.dir}${file.separator}generalize.xsl">
		<xmlcatalog refid="dita.catalog"/>
	</xslt>
</target>
  
<!-- restore the specialized elements for a previously generalized topic -->
	<target name="dita.topic.respecialize">
		<xslt processor="trax"
				in="${inputFile}"
				out="${outputFile}"
				style="${dita.script.dir}${file.separator}specialize.xsl">
			<xmlcatalog refid="dita.catalog"/>
		</xslt>
	</target>

	<!-- add the architectural attributes with default values from the document type to the document -->
	<target name="dita.topic.normalize">
		<xslt processor="trax"
				in="${inputFile}"
				out="${outputFile}"
				style="${dita.script.dir}${file.separator}normalize.xsl">
			<xmlcatalog refid="dita.catalog"/>
		</xslt>
	</target>

	<target name="dita.dir.normalize">
		<xslt processor="trax"
				basedir="${inputDir}"
				destdir="${outputDir}"
				includes="*.xml"
				extension=".xml"
				style="${dita.script.dir}${file.separator}normalize.xsl">
			<xmlcatalog refid="dita.catalog"/>
		</xslt>
	</target>

	<!-- remove the architectural attributes with default values in the document type from the document -->
	<target name="dita.topic.denormalize">
		<xslt processor="trax"
				in="${inputFile}"
				out="${outputFile}"
				style="${dita.script.dir}${file.separator}pretty.xsl">
			<xmlcatalog refid="dita.catalog"/>
		</xslt>
	</target>

  <target name="copy-css" unless="args.csspath.url">
    <antcall target="make-css-path"/>
    <antcall target="copy-css-default"/>
    <antcall target="copy-css-user"/>
  </target>
  
  <target name="make-css-path" unless="args.csspath.present">
    <mkdir dir="${args.csspath}"/>
  </target>
  
  <target name="copy-css-default">
    <copy todir="${args.csspath}">
      <fileset dir="${dita.resource.dir}" includes="*.css"/>
    </copy>    
  </target>
  
  <target name="copy-css-user" if="user.copycss.yes">
    <copy file="${args.css}" tofile="${args.csspath}${args.css}"/>
  </target>
    
  <target name="dita.topic.troff">
      <!-- step 1 -->
      <xslt processor="trax"
  		basedir="${dita.temp.dir}"
  		destdir="${output.dir}"
  		includes="${fullditatopiclist}"
  		extension="${dita.extname}"
  		style="${dita.script.dir}${file.separator}dita2troff-step1-shell.xsl">
          <param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
      </xslt>
      
  		<!-- step 2 -->
  		<xslt processor="trax"
          basedir="${outputDir}"
          destdir="${outputDir}"
          includes="${fullditatopiclist}"
          extension=".cli"
          style="${dita.script.dir}${file.separator}dita2troff-step2-shell.xsl">
  			<param name="DITAEXT" expression="${dita.extname}" if="dita.extname"/>
  		</xslt>
  	</target>
</project>