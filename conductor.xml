<?xml version="1.0"?>
<!-- (c) Copyright IBM Corp. 2004, 2005 All Rights Reserved. -->
<project name="DOST" default="init" basedir=".">
  <import file="catalog-ant.xml"/>
  <import file="ditatargets.xml"/>
  <import file="pretargets.xml"/>    
  
  <taskdef name="pipeline" classname="org.dita.dost.invoker.AntInvoker">
    <classpath>
	  <pathelement location="${basedir}${file.separator}lib${file.separator}dost.jar"/>
    </classpath>
  </taskdef>
  
  <!-- parameters from command line or external property file 
		transtype          required
		args.input         required
		output.dir         required
		dita.extname       required
		dita.input.valfile optional
	-->

  <property name="dita.dir" value="${basedir}"/>
  <property name="dita.temp.dir" value="${basedir}${file.separator}temp"/>
  <property name="dita.script.dir" value="${dita.dir}${file.separator}xsl"/>
  <property name="dita.resource.dir" value="${dita.dir}${file.separator}resource"/>
  <property name="hhc.dir" value="C:\Program Files\HTML Help Workshop"/>
  <property environment="env"/>
  <property name="dita.empty" value=""/>
  
  <!-- property values end -->
  <target name="use-init">
    <available classname="com.icl.saxon.StyleSheet" property="hasSaxon"/>
    <available classname="org.apache.fop.tools.anttasks.Fop" property="hasFOP"/>
    <available file="${hhc.dir}\hhc.exe" property="HTMLHelpCompiler" value="${hhc.dir}\hhc.exe"/>
    <condition property="dita.extname" value=".xml">
      <not>
        <isset property="dita.extname"/>
      </not>
    </condition>
    <condition property="clean_temp">     
      <and>
        <isset property="clean.temp"/>
        <equals arg1="${clean.temp}" arg2="no" casesensitive="false"/> 
      </and>
    </condition>
  </target>
  
  <target name="init" depends="use-init">
    <fail message="Invalid transformation type! Please input correct transormation types using Ant parameter 'transtype':  xhtml, eclipsehelp, javahelp, htmlhelp, pdf, docbook">
      <condition>
        <and>
          <not>
            <equals arg1="${transtype}" arg2="xhtml" casesensitive="false"/>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="eclipsehelp" casesensitive="false"/>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="javahelp" casesensitive="false"/>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="htmlhelp" casesensitive="false"/>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="pdf" casesensitive="false"/>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="docbook" casesensitive="false"/>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="eclipsecontent" casesensitive="false"/>
          </not>
          <not>
            <equals arg1="${transtype}" arg2="troff"/>
          </not>
        </and>
      </condition>
    </fail>
    <antcall target="dita2${transtype}"/>
  </target>
  
  <!-- property value validation begin -->
  <target name="check-arg" depends="use-init">
    <fail message="please provide filename of dita map of dita topic using Ant parameter 'args.input' ">
      <condition>
        <and>
        <not>
          <isset property="args.input"/>
        </not>
        <or>
          <not>
            <isset property="dita.input"/>
          </not>
          <not>
            <isset property="dita.input.dirname"/>
          </not>
        </or>
        </and>        
      </condition>
    </fail>
    
    <fail message="Please provide an available temp directory.">
      <condition>
        <or>
          <not> <isset property="dita.temp.dir"/> </not>
          <not> <available file="${dita.temp.dir}" type="dir"/> </not>
        </or>
      </condition>
    </fail>
        
    <basename property="dita.input.args" file="${args.input}"/>
    <dirname property="dita.input.dirname.args" file="${args.input}"/>
    <condition property="dita.input" value="${dita.input.args}">
      <not>
        <isset property="dita.input"/>
      </not>
    </condition>
    <condition property="dita.input.dirname" value="${dita.input.dirname.args}">
      <not>
        <isset property="dita.input.dirname"/>
      </not>
    </condition>
    
    <basename property="dita.input.filename" file="${dita.input}"/>
    
    <basename property="dita.map.filename.root" file="${dita.input.filename}" suffix=".ditamap"/>
    <basename property="dita.topic.filename.root" file="${dita.input.filename}" suffix="${dita.extname}"/>
    <dirname property="dita.map.output.dir" file="${output.dir}${file.separator}${dita.input}"/>

    <condition property="args.csspath" value="${dita.map.output.dir}${file.separator}">
      <not>
        <isset property="args.csspath"/>
      </not>
    </condition>

    <condition property="args.csspath.url">
      <or>
        <contains string="${args.csspath}" substring="http://"/>
        <contains string="${args.csspath}" substring="https://"/>
      </or>
    </condition>
    
    <available file="${args.csspath}" property="args.csspath.present"/>
    <available file="${args.css}" property="args.css.present"/>    
           
    <condition property="user.copycss.yes">
      <and>
        <equals arg1="${args.copycss}" arg2="yes"/>
        <isset property="${args.css.present}"/>
      </and>      
    </condition>    
        
    <fail message="please provide extension filename for dita topic file using Ant parameter 'dita.extname' ">
      <condition>
        <not>
          <isset property="dita.extname"/>
        </not>
      </condition>
    </fail>
    <fail message="please provide ouput directory using Ant parameter 'output.dir' ">
      <condition>
        <not>
          <isset property="output.dir"/>
        </not>
      </condition>
    </fail>
    <condition property="args.input" value="${dita.input.dirname}${file.separator}${dita.input}">
      <not>
        <isset property="args.input"/>
      </not>
    </condition>
    
    <echo>*****************************************************************</echo>
    <echo>* input = ${args.input}</echo>
    <echo>* type = ${transtype}</echo>
    <echo>* outputdir = ${output.dir}</echo>
    <echo>* extname = ${dita.extname}</echo>
    <echo>* tempdir = ${dita.temp.dir}</echo>
    <echo>* clean.temp = ${clean.temp}</echo>
    <echo>*****************************************************************</echo>
    
  </target>
  
  <!-- property value validation end -->
  
  <target name="dita-preprocess" depends="check-arg, preprocess"/>
  
  <!-- main transformation targets begin -->
  
  <target name="dita2pdf" depends="dita-preprocess, map2pdf, topic2pdf"/>  
  
  <target name="topic2pdf" if="noMap" depends="dita-preprocess">
    <antcall target="dita.topic.fo">
      <param name="input" value="${dita.temp.dir}${file.separator}${dita.input}"/>
      <param name="output" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.fo"/>
    </antcall>
	<antcall target="dita.fo2pdf">
      <param name="input" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.fo"/>
      <param name="output" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.pdf"/>
    </antcall>
  </target>
  
  <target name="map2pdf" unless="noMap" depends="dita-preprocess">
    <antcall target="dita.map.fo">
      <param name="input" value="${dita.temp.dir}${file.separator}${dita.input}"/>
      <param name="output" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.fo"/>
	  <param name="rootPath" value="${dita.input.dirname}"/>
    </antcall>
	<antcall target="dita.fo2pdf">
      <param name="input" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.fo"/>
      <param name="output" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.pdf"/>
    </antcall>
  </target>
  
  <target name="dita2docbook" depends="dita-preprocess, topic2docbook, map2docbook"/>
  
  <target name="topic2docbook" if="noMap" depends="dita-preprocess">
    <antcall target="dita.topic.docbook">
      <param name="inputFile" value="${dita.temp.dir}${file.separator}${dita.input}"/>
      <param name="outputFile" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.xml"/>
    </antcall>
  </target>
  
  <target name="map2docbook" unless="noMap" depends="dita-preprocess">
    <antcall target="dita.map.docbook">
      <param name="mapRoot" value="${dita.map.filename.root}"/>
      <param name="inputMap" value="${dita.input}"/>
      <param name="inputDir" value="${dita.temp.dir}"/>
      <param name="outputDir" value="${dita.map.output.dir}"/>
    </antcall>
  </target>
  
  <target name="dita2xhtml" depends="dita-preprocess, map2xhtml">
    <antcall target="dita.topics.xhtml"/>
  </target>
  
  <target name="map2xhtml" unless="noMap">
    <antcall target="dita.map.xhtml"/>
  </target>
  
  <target name="dita2javahelp" unless="noMap" depends="dita-preprocess">
    <condition property="args.javahelp.helpset" value="${dita.resource.dir}${file.separator}helpset.hs">
      <not>
        <isset property="args.javahelp.helpset"/>
      </not>
    </condition>
    <antcall target="dita.topics.javahelp"/>
    <antcall target="dita.map.javahelp"/>

    <antcall target="compile.Java.Help">
      <param name="outputDir" value="${dita.map.output.dir}"/>
    </antcall>
  </target>
  
  <target name="dita2eclipsehelp" unless="noMap" depends="dita-preprocess">

    <antcall target="dita.topics.eclipse"/>
    <antcall target="dita.map.eclipse"/>

  </target>
  
  <target name="dita2eclipsecontent" unless="noMap" depends="dita-preprocess">

    <antcall target="dita.topics.eclipse.content"/>
    <antcall target="dita.map.eclipse.content"/>

  </target>
  
  <target name="dita2htmlhelp" unless="noMap" depends="dita-preprocess">
    <antcall target="dita.map.htmlhelp"/>
    <antcall target="dita.topics.htmlhelp"/>
    <antcall target="compile.HTML.Help">
      <param name="projectFile" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.hhp"/>
    </antcall>
  </target>

  <target name="dita2troff" depends="dita-preprocess">
    <antcall target="dita.topic.troff">
      <param name="inputDir" value="${dita.temp.dir}"/>
      <param name="inputFile" value="${dita.input}"/>
      <param name="outputDir" value="${dita.map.output.dir}"/>
      <param name="outputFileRoot" value="${dita.topic.filename.root}"/>
    </antcall>
  </target>
</project>
